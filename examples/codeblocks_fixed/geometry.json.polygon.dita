<?xml version='1.0' encoding='UTF-8'?>
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="geometry.json.polygon" xml:lang="ru" xsi:noNamespaceSchemaLocation="urn:yandex:names:tc:dita:xsd:yandexTopic.xsd:1.3">







<title translate="no">geometry.json.polygon</title>
 <prolog>
        <metadata>
            <keywords>
                <keyword>geometry.json.polygon</keyword>
            </keywords>
        </metadata>
    </prolog>

<body>





    <section>

    
    






    
        <p translate="no">Расширяет
            <xref href="IGeometryJson.dita" type="topic"><keyword>IGeometryJson</keyword></xref>.</p>
    



   
        <p>Объект, описывающий JSON-представление геометрии "Многоугольник".</p>
    







    <p translate="no"><xref href="#geometry.json.polygon/constructor-summary" translate="no" type="section">Конструктор</xref> | <xref href="#geometry.json.polygon/properties-summary" translate="no" type="section">Поля </xref></p>






</section>





      <section id="constructor-summary">

    
        <title translate="no">Конструктор</title>

        <p translate="no"><codeblock code-lang="javascript" xml:space="preserve">geometry.json.polygon()</codeblock></p>
    
       
            
        

        

        

        

        

        

        
        
        
      
        
            <p translate="no"><b>Пример: </b></p><codeblock code-lang="javascript" xml:space="preserve">var geometryJson = {
    type: "Polygon",
    coordinates: [[[0, 0], [7, 11]], [[1, 2], [3, 5]]]
};</codeblock>
        

    </section>



 








    
    
    
        <section id="properties-summary">
        <title translate="no">Поля</title>
                        
        
            
        
            
        
            
        
        <table>
        
          <tgroup cols="3">
          <colspec colname="col1" colnum="1" colwidth="25*" rowheader="headers"/>
          <colspec colname="col2" colnum="2" colwidth="15*" rowheader="headers"/>
          

           <colspec colname="col3" colnum="3" colwidth="60*" rowheader="headers"/>
          <thead>
            <row>
              <entry align="left" colname="col1" translate="no">Имя</entry>
              <entry align="left" colname="col2" translate="no">Тип</entry>
          
              <entry align="left" colname="col3" translate="no">Описание</entry>
            </row>
          </thead>
        <tbody>
        
            <row>
              <entry colname="col1" translate="no"><xref href="geometry.json.polygon.dita#field_detail/coordinates" type="section"><keyword>coordinates</keyword></xref></entry>
              <entry colname="col2" translate="no">Number[][][]</entry>
        
              <entry colname="col3">
                <p>Координаты многоугольника.</p>
                
              </entry>
            </row>
        
            <row>
              <entry colname="col1" translate="no"><xref href="geometry.json.polygon.dita#field_detail/fillRule" type="section"><keyword>fillRule</keyword></xref></entry>
              <entry colname="col2" translate="no">String</entry>
        
              <entry colname="col3">
                <p>Идентификатор алгоритма заливки многоугольника. Может принимать одно из двух значений:<ul>
    <li>evenOdd - алгоритм, определяющий, находится ли точка в области заполнения, путем рисования луча от этой точки до бесконечности в любом направлении и подсчета количества сегментов контура в пределах заданной фигуры, которые пересекает этот луч. Если это число нечетное, точка находится внутри; если четное, точка находится снаружи.</li>
    <li>nonZero - алгоритм, определяющий, находится ли точка в области заполнения, путем рисования луча от этой точки до бесконечности в любом направлении и проверки точек, в которых сегмент фигуры пересекает этот луч. Начиная с нуля, добавляется единица каждый раз, когда сегмент пересекает луч слева направо, и вычитается единица каждый раз, когда сегмент пересекает луч справа налево. Если после подсчета пересечений результат равен нулю, точка находится снаружи контура. В противном случае она находится внутри.</li>
</ul></p>
                
              </entry>
            </row>
        
            <row>
              <entry colname="col1" translate="no"><xref href="IGeometryJson.dita#field_detail/type" type="section"><keyword>type</keyword></xref></entry>
              <entry colname="col2" translate="no">String</entry>
        
              <entry colname="col3">
                <p>Идентификатор типа геометрии.</p>
                
                  <p translate="no">Унаследовано от  <xref href="IGeometryJson.dita#field_detail/type" type="section"><keyword>IGeometryJson</keyword></xref>.</p>
                
              </entry>
            </row>
        
        </tbody>
        </tgroup>
        </table>
        </section>
    

















</body>







    <topic id="field_detail">
        <title translate="no">Описание полей</title>
        <body>
        
            <section id="coordinates">
            <title translate="no">coordinates</title>
            <p translate="no"><codeblock code-lang="javascript" xml:space="preserve">{Number[][][]} coordinates</codeblock></p>

            <p>Координаты многоугольника.</p>

            

            
                

            

            

            

            

            </section>
        
            <section id="fillRule">
            <title translate="no">fillRule</title>
            <p translate="no"><codeblock code-lang="javascript" xml:space="preserve">{String} fillRule</codeblock></p>

            <p>Идентификатор алгоритма заливки многоугольника. Может принимать одно из двух значений:<ul>
    <li>evenOdd - алгоритм, определяющий, находится ли точка в области заполнения, путем рисования луча от этой точки до бесконечности в любом направлении и подсчета количества сегментов контура в пределах заданной фигуры, которые пересекает этот луч. Если это число нечетное, точка находится внутри; если четное, точка находится снаружи.</li>
    <li>nonZero - алгоритм, определяющий, находится ли точка в области заполнения, путем рисования луча от этой точки до бесконечности в любом направлении и проверки точек, в которых сегмент фигуры пересекает этот луч. Начиная с нуля, добавляется единица каждый раз, когда сегмент пересекает луч слева направо, и вычитается единица каждый раз, когда сегмент пересекает луч справа налево. Если после подсчета пересечений результат равен нулю, точка находится снаружи контура. В противном случае она находится внутри.</li>
</ul></p>

            

            
                

            

            

            

            

            </section>
        
    </body>
    </topic><!-- XLIFF_FARM_ZDJmMWFh_CACHING --></topic>